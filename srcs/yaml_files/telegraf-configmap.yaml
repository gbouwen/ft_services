apiVersion: v1

kind: ConfigMap
metadata:
  name: telegraf-configmap
data:
  telegraf.conf: |+
    # Read metrics about docker containers
    [[inputs.docker]]
    ## Docker Endpoint
    ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
    ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
    endpoint = "unix:///var/run/docker.sock"

    ## Set to true to collect Swarm metrics(desired_replicas, running_replicas)
    ## Note: configure this in one of the manager nodes in a Swarm cluster.
    ## configuring in multiple Swarm managers results in duplication of metrics.
    gather_services = false

    ## Only collect metrics for these containers. Values will be appended to
    ## container_name_include.
    ## Deprecated (1.4.0), use container_name_include
    container_names = []

    ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
    source_tag = false

    ## Containers to include and exclude. Collect all if empty. Globs accepted.
    container_name_include = []
    container_name_exclude = []

    ## Container states to include and exclude. Globs accepted.
    ## When empty only containers in the "running" state will be captured.
    ## example: container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
    ## example: container_state_exclude = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
    # container_state_include = []
    # container_state_exclude = []

    ## Timeout for docker list, info, and stats commands
    timeout = "5s"

    ## Whether to report for each container per-device blkio (8:0, 8:1...) and
    ## network (eth0, eth1, ...) stats or not
    perdevice = true

    ## Whether to report for each container total blkio and network stats or not
    total = false

    ## docker labels to include and exclude as tags.  Globs accepted.
    ## Note that an empty array for both will include all labels as tags
    docker_label_include = []
    docker_label_exclude = []

    ## Which environment variables should we use as a tag
    tag_env = ["JAVA_HOME", "HEAP_SIZE"]

    ## Optional TLS Config
    # tls_ca = "/etc/telegraf/ca.pem"
    # tls_cert = "/etc/telegraf/cert.pem"
    # tls_key = "/etc/telegraf/key.pem"
    ## Use TLS but skip chain & host verification
    # insecure_skip_verify = false

    ###############################################################################
    #                            OUTPUT PLUGINS                                   #
    ###############################################################################

    # Configuration for sending metrics to InfluxDB
    [[outputs.influxdb]]
    ## The full HTTP or UDP URL for your InfluxDB instance.
    ##
    ## Multiple URLs can be specified for a single cluster, only ONE of the
    ## urls will be written to each interval.
    # urls = ["unix:///var/run/influxdb.sock"]
    # urls = ["udp://127.0.0.1:8089"]
    # urls = ["http://127.0.0.1:8086"]
    urls = ["$INFLUXDB_URL"]

    ## The target database for metrics; will be created as needed.
    database = "$INFLUXDB_DATABASE"

    ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
    ## Telegraf with a user without permissions to create databases or when the
    ## database already exists.
    # skip_database_creation = false

    ## Name of existing retention policy to write to.  Empty string writes to
    ## the default retention policy.  Only takes effect when using HTTP.
    # retention_policy = ""

    ## Write consistency (clusters only), can be: "any", "one", "quorum", "all".
    ## Only takes effect when using HTTP.
    # write_consistency = "any"

    ## Timeout for HTTP messages.
    # timeout = "5s"

    ## HTTP Basic Auth
    username = "$INFLUXDB_USERNAME"
    password = "$INFLUXDB_PASSWORD"

    ## HTTP User-Agent
    # user_agent = "telegraf"

    ## UDP payload size is the maximum packet size to send.
    # udp_payload = 512

    ## Optional TLS Config for use on HTTP connections.
    # tls_ca = "/etc/telegraf/ca.pem"
    # tls_cert = "/etc/telegraf/cert.pem"
    # tls_key = "/etc/telegraf/key.pem"
    ## Use TLS but skip chain & host verification
    # insecure_skip_verify = false

    ## HTTP Proxy override, if unset values the standard proxy environment
    ## variables are consulted to determine which proxy, if any, should be used.
    # http_proxy = "http://corporate.proxy:3128"

    ## Additional HTTP headers
    # http_headers = {"X-Special-Header" = "Special-Value"}

    ## HTTP Content-Encoding for write request body, can be set to "gzip" to
    ## compress body or "identity" to apply no encoding.
    # content_encoding = "identity"

    ## When true, Telegraf will output unsigned integers as unsigned values,
    ## i.e.: "42u".  You will need a version of InfluxDB supporting unsigned
    ## integer values.  Enabling this option will result in field type errors if
    ## existing data has been written.
    # influx_uint_support = false
